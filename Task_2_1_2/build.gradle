plugins {
    id 'java'
    id 'application'
    id 'me.champeau.jmh' version '0.7.1'
    id 'jacoco'
}

group = 'ru.nsu.shelestov'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'
    implementation 'org.openjdk.jmh:jmh-core:1.36'
    implementation 'org.openjdk.jmh:jmh-generator-annprocess:1.36'
    annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.36'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
}

application {
    mainClass = 'ru.nsu.shelestov.worker.WorkerMain'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = false

    }
}

jar {
    manifest {
        attributes(
            'Main-Class': 'ru.nsu.shelestov.worker.WorkerMain'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'ru.nsu.shelestov.server.TaskServer'
}

task runWorker(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'ru.nsu.shelestov.worker.WorkerMain'
}